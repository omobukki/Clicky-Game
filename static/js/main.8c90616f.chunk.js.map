{"version":3,"sources":["components/CartoonFinder/index.js","components/Character/index.js","components/Title/index.js","App.js","index.js"],"names":["CartoonFinder","props","react_default","a","createElement","className","onClick","clickFriend","id","alt","src","image","Character","children","Title","App","state","friends","score","shuffleFriends","array","i","j","temp","length","Math","floor","random","newScore","_this","map","friend","clicked","setState","_this2","this","components_Character","components_Title","class","type","components_CartoonFinder","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"g5DAaeA,MAVf,SAAuBC,GACrB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKE,QAAS,kBAAML,EAAMM,YAAYN,EAAMO,KAAKC,IAAKR,EAAMO,GAAIE,IAAKT,EAAMU,iBCApEC,MAJf,SAAmBX,GACjB,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaJ,EAAMY,iBCG5BC,MAJf,SAAeb,GACb,OAAOC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASJ,EAAMY,kBCgFvBE,6MA5EbC,MAAQ,CACNC,UACAC,MAAO,KAIPC,eAAiB,SAACC,GAChB,IAAIC,EAAI,EACJC,EAAI,EACJC,EAAO,KAEX,IAAKF,EAAID,EAAMI,OAAS,EAAGH,EAAI,EAAGA,GAAK,EACrCC,EAAIG,KAAKC,MAAMD,KAAKE,UAAYN,EAAI,IACpCE,EAAOH,EAAMC,GACbD,EAAMC,GAAKD,EAAME,GACjBF,EAAME,GAAKC,EAEb,OAAOH,KAGXb,YAAc,SAAAC,GAEZ,IAAIoB,EAAWC,EAAKb,MAAME,MACpBD,EAAUY,EAAKb,MAAMC,QAAQa,IAAI,SAAAC,GAcrC,OAXIA,EAAOvB,KAAOA,IAAyB,IAAnBuB,EAAOC,SAC7BD,EAAOC,SAAU,EAGjBJ,KAIOG,EAAOvB,KAAOA,GAAMuB,EAAOC,QAG7BD,IAGTF,EAAKI,SAAS,CACZhB,QAASY,EAAKV,eAAeF,GAC7BC,MAAOU,6EAKF,IAAAM,EAAAC,KACP,OACEjC,EAAAC,EAAAC,cAACgC,EAAD,KACElC,EAAAC,EAAAC,cAACiC,EAAD,qBACAnC,EAAAC,EAAAC,cAAA,OAAKkC,MAAM,aACTpC,EAAAC,EAAAC,cAAA,OAAKkC,MAAM,aAEPpC,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,OAAKkC,MAAM,gBACPpC,EAAAC,EAAAC,cAAA,UAAQmC,KAAK,SAASD,MAAM,sCAC5BpC,EAAAC,EAAAC,cAAA,sBAAc+B,KAAKnB,MAAME,WAKlCiB,KAAKnB,MAAMC,QAAQa,IAAI,SAAAC,GAAM,OAC5B7B,EAAAC,EAAAC,cAACoC,EAAD,CACEjC,YAAa2B,EAAK3B,YAClBC,GAAIuB,EAAOvB,GACXG,MAAOoB,EAAOpB,MACd8B,IAAKV,EAAOvB,GACZwB,QAASD,EAAOC,oBAtEVU,mBCDlBC,IAASC,OAAO1C,EAAAC,EAAAC,cAACyC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.8c90616f.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction CartoonFinder(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <img onClick={() => props.clickFriend(props.id)} alt={props.id} src={props.image} />\n      </div>\n    </div>\n  );\n}\n\nexport default CartoonFinder;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Character(props) {\n  return <div className=\"Character\">{props.children}</div>;\n}\n\nexport default Character;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React, { Component } from \"react\";\nimport CartoonFinder from \"./components/CartoonFinder\";\nimport Character from \"./components/Character\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    score: 0\n  };\n\n    // Fisher-Yates Shuffle from https://www.frankmitchell.org/2015/01/fisher-yates/\n    shuffleFriends = (array) => {\n      let i = 0\n        , j = 0\n        , temp = null\n    \n      for (i = array.length - 1; i > 0; i -= 1) {\n        j = Math.floor(Math.random() * (i + 1))\n        temp = array[i]\n        array[i] = array[j]\n        array[j] = temp\n      }\n      return array;\n    };\n\n  clickFriend = id => {\n    //find current friend\n    let newScore = this.state.score;\n    const friends = this.state.friends.map(friend =>{\n      \n      //If the current friend's clicked property = false change it\n      if (friend.id === id && friend.clicked === false){\n        friend.clicked = true;\n      \n        //update score\n        newScore ++;\n        \n      }\n\n      else if (friend.id === id && friend.clicked === true){\n        //game over\n      }\n      return friend\n   });\n    // Set this.state.friends equal to the new friends array\n    this.setState({ \n      friends: this.shuffleFriends(friends), \n      score: newScore \n    });\n  };\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Character>\n        <Title>Friends List</Title>\n        <div class=\"container\">\n          <div class=\"jumbotron\">\n          \n              <h1>React Clicky Game</h1>\n              <div class=\"butcontainer\">\n                  <button type=\"button\" class=\"btn btn-default btn-lg btn-primary\">\n                  <span>Score: {this.state.score}</span>\n                  </button>\n              </div>\n          </div>\n        </div>\n        {this.state.friends.map(friend => (\n          <CartoonFinder\n            clickFriend={this.clickFriend}\n            id={friend.id}\n            image={friend.image}\n            key={friend.id}\n            clicked={friend.clicked}\n          />\n        ))}\n      </Character>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}